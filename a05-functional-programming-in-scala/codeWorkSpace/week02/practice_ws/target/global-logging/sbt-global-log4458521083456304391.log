[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\vdube\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\vdube\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.1 (Oracle Corporation Java 1.8.0_411)
[debug] Load.defaultLoad until apply took 334.8294ms
[debug]           Load.loadUnit: plugins took 271.3476ms
[debug]           Load.loadUnit: defsScala took 0.8318ms
[debug] [Loading] Scanning directory E:\gitnote\a08-functional-programming-in-scala\codeWorkSpace\week02\practice_ws\project
[debug]             Load.loadUnit: mkEval took 31.7464ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\gitnote\a08-functional-programming-in-scala\codeWorkSpace\week02\practice_ws\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 124.3164 ms
[info] loading settings for project practice_ws-build from idea.sbt ...
[debug]               Load.resolveProject(practice_ws-build) took 199.2593ms
[debug]             Load.loadTransitive: finalizeProject(Project(id practice_ws-build, base: E:\gitnote\a08-functional-programming-in-scala\codeWorkSpace\week02\practice_ws\project, plugins: List(<none>))) took 392.1471ms
[debug] [Loading] Done in E:\gitnote\a08-functional-programming-in-scala\codeWorkSpace\week02\practice_ws\project, returning: (practice_ws-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 8947.0351ms
[debug]           Load.loadUnit: cleanEvalClasses took 17.4262ms
[debug]         Load.loadUnit(file:/E:/gitnote/a08-functional-programming-in-scala/codeWorkSpace/week02/practice_ws/project/, ...) took 9250.4583ms
[debug]       Load.apply: load took 9474.615ms
[debug]       Load.apply: resolveProjects took 18.0722ms
[debug]       Load.apply: finalTransforms took 210.6894ms
[debug]       Load.apply: config.delegates took 21.0716ms
[debug]       Load.apply: Def.make(settings)... took 1249.5418ms
[debug]       Load.apply: structureIndex took 276.8724ms
[debug]       Load.apply: mkStreams took 3.0411ms
[info] loading project definition from E:\gitnote\a08-functional-programming-in-scala\codeWorkSpace\week02\practice_ws\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 17671.5086ms
[debug]     Load.loadUnit: defsScala took 0.0045ms
[debug] [Loading] Scanning directory E:\gitnote\a08-functional-programming-in-scala\codeWorkSpace\week02\practice_ws
[debug]       Load.loadUnit: mkEval took 0.437ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.2863 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 75.5969ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: E:\gitnote\a08-functional-programming-in-scala\codeWorkSpace\week02\practice_ws, plugins: List(<none>))) took 81.7865ms
[debug] [Loading] Done in E:\gitnote\a08-functional-programming-in-scala\codeWorkSpace\week02\practice_ws, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2833.306ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.8166ms
[debug]   Load.loadUnit(file:/E:/gitnote/a08-functional-programming-in-scala/codeWorkSpace/week02/practice_ws/, ...) took 20518.9876ms
[debug] Load.apply: load took 20590.7367ms
[debug] Load.apply: resolveProjects took 0.248ms
[debug] Load.apply: finalTransforms took 63.4556ms
[debug] Load.apply: config.delegates took 0.7499ms
[debug] Load.apply: Def.make(settings)... took 288.7677ms
[debug] Load.apply: structureIndex took 62.7361ms
[debug] Load.apply: mkStreams took 0.0046ms
[info] set current project to practice_ws (in build file:/E:/gitnote/a08-functional-programming-in-scala/codeWorkSpace/week02/practice_ws/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
