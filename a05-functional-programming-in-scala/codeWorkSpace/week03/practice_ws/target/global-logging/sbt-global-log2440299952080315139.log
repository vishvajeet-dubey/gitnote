[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\vdube\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\vdube\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.10.1 (Oracle Corporation Java 1.8.0_411)
[debug] Load.defaultLoad until apply took 249.3612ms
[debug]           Load.loadUnit: plugins took 563.8894ms
[debug]           Load.loadUnit: defsScala took 0.6452ms
[debug] [Loading] Scanning directory E:\gitnote\a08-functional-programming-in-scala\codeWorkSpace\week03\practice_ws\project
[debug]             Load.loadUnit: mkEval took 19.908ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in E:\gitnote\a08-functional-programming-in-scala\codeWorkSpace\week03\practice_ws\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 33.2859 ms
[info] loading settings for project practice_ws-build from idea.sbt ...
[debug]               Load.resolveProject(practice_ws-build) took 85.1141ms
[debug]             Load.loadTransitive: finalizeProject(Project(id practice_ws-build, base: E:\gitnote\a08-functional-programming-in-scala\codeWorkSpace\week03\practice_ws\project, plugins: List(<none>))) took 136.1853ms
[debug] [Loading] Done in E:\gitnote\a08-functional-programming-in-scala\codeWorkSpace\week03\practice_ws\project, returning: (practice_ws-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 8142.0136ms
[debug]           Load.loadUnit: cleanEvalClasses took 10.8576ms
[debug]         Load.loadUnit(file:/E:/gitnote/a08-functional-programming-in-scala/codeWorkSpace/week03/practice_ws/project/, ...) took 8727.4942ms
[debug]       Load.apply: load took 8918.8621ms
[debug]       Load.apply: resolveProjects took 8.86ms
[debug]       Load.apply: finalTransforms took 122.2456ms
[debug]       Load.apply: config.delegates took 13.2057ms
[debug]       Load.apply: Def.make(settings)... took 1020.1715ms
[debug]       Load.apply: structureIndex took 189.6584ms
[debug]       Load.apply: mkStreams took 3.4253ms
[info] loading project definition from E:\gitnote\a08-functional-programming-in-scala\codeWorkSpace\week03\practice_ws\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 14398.1031ms
[debug]     Load.loadUnit: defsScala took 0.004ms
[debug] [Loading] Scanning directory E:\gitnote\a08-functional-programming-in-scala\codeWorkSpace\week03\practice_ws
[debug]       Load.loadUnit: mkEval took 0.3258ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 8.6047 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 63.3294ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: E:\gitnote\a08-functional-programming-in-scala\codeWorkSpace\week03\practice_ws, plugins: List(<none>))) took 74.0536ms
[debug] [Loading] Done in E:\gitnote\a08-functional-programming-in-scala\codeWorkSpace\week03\practice_ws, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 3037.3712ms
[debug]     Load.loadUnit: cleanEvalClasses took 15.287ms
[debug]   Load.loadUnit(file:/E:/gitnote/a08-functional-programming-in-scala/codeWorkSpace/week03/practice_ws/, ...) took 17453.1863ms
[debug] Load.apply: load took 17511.7525ms
[debug] Load.apply: resolveProjects took 0.1912ms
[debug] Load.apply: finalTransforms took 82.5712ms
[debug] Load.apply: config.delegates took 0.6206ms
[debug] Load.apply: Def.make(settings)... took 291.8645ms
[debug] Load.apply: structureIndex took 55.2887ms
[debug] Load.apply: mkStreams took 0.0039ms
[info] set current project to practice_ws (in build file:/E:/gitnote/a08-functional-programming-in-scala/codeWorkSpace/week03/practice_ws/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(idea-shell, None, None)
